version: "3"

services:
  geoapi_backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: dev_asgi
    healthcheck:
      test: [ "CMD-SHELL", "./manage.py healthcheck" ]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 5s
    ports:
      - "8000:8000"
    depends_on:
      geoapi_redis:
        condition: service_healthy
      geoapi_db:
        condition: service_healthy
    environment:
      - REDIS_ADDRESS=geoapi_redis
      - REDIS_PORT=6379
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=geoapi
      - POSTGRES_DB=geoapi
      - POSTGRES_HOST=geoapi_db
    volumes:
      - ../src/:/app

  geoapi_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: dev_worker
    environment:
      - REDIS_ADDRESS=geoapi_redis
      - REDIS_PORT=6379
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=geoapi
      - POSTGRES_DB=geoapi
    depends_on:
      geoapi_backend:
        condition: service_healthy

  geoapi_redis:
    image: redis:alpine
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 2s
      timeout: 5s
      retries: 10
      start_period: 15s
    ports:
      - "6379:6379"

  geoapi_db:
    image: postgres:alpine
    user: postgres
    environment:
      - POSTGRES_PASSWORD=geoapi
      - POSTGRES_USER=postgres
      - POSTGRES_DB=geoapi
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 2s
      timeout: 5s
      retries: 10
      start_period: 15s
